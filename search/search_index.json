{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home Welcome to the Anki Community We are a team of developers working together to maintain the original anki-sync-server and other related projects. You have reached our primary knowledge base. Note This site has been recently launched and it is under construction. To improve this wiki, please send a pull request to this repository ! Where to go from here Find the organization on GitHub Join and chat with us via Gitter","title":"Home"},{"location":"#home","text":"","title":"Home"},{"location":"#welcome-to-the-anki-community","text":"We are a team of developers working together to maintain the original anki-sync-server and other related projects. You have reached our primary knowledge base. Note This site has been recently launched and it is under construction. To improve this wiki, please send a pull request to this repository !","title":"Welcome to the Anki Community"},{"location":"#where-to-go-from-here","text":"Find the organization on GitHub Join and chat with us via Gitter","title":"Where to go from here"},{"location":"news/","text":"News 2020-10-11: this website has been launched","title":"News"},{"location":"news/#news","text":"2020-10-11: this website has been launched","title":"News"},{"location":"Supported%20Projects/SyncRedirector/","text":"SyncRedirector Created originally for docker-anki-sync-server , SyncRedirector is a plugin with the intention to make redirecting the synchronization url in the client a smoother experience. Right now it supports the legacy variant of anki-sync-server Variant Client support GitHub Legacy 2.1.19 GitHub Usage Refer to the instructions in the GitHub repository .","title":"SyncRedirector"},{"location":"Supported%20Projects/SyncRedirector/#syncredirector","text":"Created originally for docker-anki-sync-server , SyncRedirector is a plugin with the intention to make redirecting the synchronization url in the client a smoother experience. Right now it supports the legacy variant of anki-sync-server Variant Client support GitHub Legacy 2.1.19 GitHub","title":"SyncRedirector"},{"location":"Supported%20Projects/SyncRedirector/#usage","text":"Refer to the instructions in the GitHub repository .","title":"Usage"},{"location":"Supported%20Projects/anki-sync-server/","text":"anki-sync-server As of yet we can provide you these variants of the synchronization server*. Variant Anki Desktop version Anki Droid version GitHub url DockerHub url Legacy 2.1.19 2.9.1 GitHub DockerHub *: a more recent version is coming soon... Legacy variant The legacy variant is based on the original anki-sync-server . This is the battle-tested version. It does not support the most recent Anki clients, however, as of writing, it is the version that you can probably safely rely on. Download mirrors for the old Anki clients (including the Android version) are provided in the GitHub repository .","title":"anki-sync-server"},{"location":"Supported%20Projects/anki-sync-server/#anki-sync-server","text":"As of yet we can provide you these variants of the synchronization server*. Variant Anki Desktop version Anki Droid version GitHub url DockerHub url Legacy 2.1.19 2.9.1 GitHub DockerHub *: a more recent version is coming soon...","title":"anki-sync-server"},{"location":"Supported%20Projects/anki-sync-server/#legacy-variant","text":"The legacy variant is based on the original anki-sync-server . This is the battle-tested version. It does not support the most recent Anki clients, however, as of writing, it is the version that you can probably safely rely on. Download mirrors for the old Anki clients (including the Android version) are provided in the GitHub repository .","title":"Legacy variant"},{"location":"Tutorials/Index/","text":"Hey there! If you are a newcomer, you are at the right place. One of the main goals of this community is to make beginners the experience of setting up our projects as seamlessly, as possible. If you are stuck, we hope that you'll find the information you need. If you don't, you may still contact us at Gitter for help. Also, if you find that something useful is missing from this manual and you have the time, we are happy to accept pull requests to this portal . Please refer to the menu for the tutorials.","title":"Index"},{"location":"Tutorials/anki_custom_sync_server/","text":"Configuring Anki to use a Custom Synchronization Server After you have set up an Anki server by following one of our guides (or some other way), here is how you can configure Anki to use your server instead AnkiWeb. URL to set on your Anki client devices Suppose you're hosting anki-sync-server at your_anki_server.tld . In this case: What you need to publish Specify in AnkiDesktop Specify in AnkiDroid http://your_anki_server.tld/sync http://your_anki_server.tld/sync http://your_anki_server.tld/ http://your_anki_server.tld/msync http://your_anki_server.tld/msync http://your_anki_server.tld/msync AnkiDroid Open the app, then slide off the menu from the left side. Go Settings > Advanced > Custom sync server and specify the same two urls you've specified on the desktop client. From now on, you can synchronize your collection the same way you would if you were using AnkiWeb. Head to the main screen of the application (the list of decks) and slide down to synchronize (or use the icon next to the menu in the top right corner). Although Anki will ask for your AnkiWeb ID the first time, you need to enter the server credentials you've set up previously instead. AnkiDesktop Current version This section is under construction, we're sorry for the inconvenience. 2.1.19 Launch Anki Go to Tools > Add-ons Click Get Add-ons... Reference the SyncRedirector plugin with the code 2124817646 If you use docker-anki-sync-server on an external server or custom port: Select SyncRedirector and click Config Configure your sync urls Restart Anki - optionally check your console output. From now on, you can synchronize your collection the same way you would if you were using AnkiWeb - look for the Sync button in the main window. Although Anki will ask for your AnkiWeb ID the first time, you need to enter the server credentials you've set up previously instead.","title":"Custom Synchronization Server"},{"location":"Tutorials/anki_custom_sync_server/#configuring-anki-to-use-a-custom-synchronization-server","text":"After you have set up an Anki server by following one of our guides (or some other way), here is how you can configure Anki to use your server instead AnkiWeb.","title":"Configuring Anki to use a Custom Synchronization Server"},{"location":"Tutorials/anki_custom_sync_server/#url-to-set-on-your-anki-client-devices","text":"Suppose you're hosting anki-sync-server at your_anki_server.tld . In this case: What you need to publish Specify in AnkiDesktop Specify in AnkiDroid http://your_anki_server.tld/sync http://your_anki_server.tld/sync http://your_anki_server.tld/ http://your_anki_server.tld/msync http://your_anki_server.tld/msync http://your_anki_server.tld/msync","title":"URL to set on your Anki client devices"},{"location":"Tutorials/anki_custom_sync_server/#ankidroid","text":"Open the app, then slide off the menu from the left side. Go Settings > Advanced > Custom sync server and specify the same two urls you've specified on the desktop client. From now on, you can synchronize your collection the same way you would if you were using AnkiWeb. Head to the main screen of the application (the list of decks) and slide down to synchronize (or use the icon next to the menu in the top right corner). Although Anki will ask for your AnkiWeb ID the first time, you need to enter the server credentials you've set up previously instead.","title":"AnkiDroid"},{"location":"Tutorials/anki_custom_sync_server/#ankidesktop","text":"","title":"AnkiDesktop"},{"location":"Tutorials/anki_custom_sync_server/#current-version","text":"This section is under construction, we're sorry for the inconvenience.","title":"Current version"},{"location":"Tutorials/anki_custom_sync_server/#2119","text":"Launch Anki Go to Tools > Add-ons Click Get Add-ons... Reference the SyncRedirector plugin with the code 2124817646 If you use docker-anki-sync-server on an external server or custom port: Select SyncRedirector and click Config Configure your sync urls Restart Anki - optionally check your console output. From now on, you can synchronize your collection the same way you would if you were using AnkiWeb - look for the Sync button in the main window. Although Anki will ask for your AnkiWeb ID the first time, you need to enter the server credentials you've set up previously instead.","title":"2.1.19"},{"location":"Tutorials/Docker/Howto/","text":"How to use our Docker images Servers backed by Docker images have the advantage that: If they work on our machine, they will probably work on your machine Docker makes us easier to ship working versions of the server Docker makes you easier to configure the servers through the unified interface it provides As of yet, the easiest and most reliable way to install anki-sync-server is probably to use one of our Docker images. You can grab an image from Supported Projects . Installation of Docker Please refer to the tutorial on the installation Docker's manual to get started. It is quite easy to get started on Linux On a GNU/Linux distribution you can usually find Docker in the default package manager. Install the appropriate package and activate the service. From now on we're assuming that you have installed Docker successfully to your machine. An example of installation anki-sync-server This is a general quick tutorial for Docker The images we provide usually have special instructions. Please refer to the README of the appropriate repository. We are going to set up an instance of anki-sync-server here, but you can apply the instructions to any image. One-time setup If you only want to see the server in action the quickest way possible in an ad-hoc manner, you can start an instance it right now. Create a directory to persist the server data (such as your collections) Start a temporary container # substitute $PERSISTENCE_DIR and $DOCKER_IMAGE accordingly, for example: # export PERSISTENCE_DIR=/home/kuklinistvan/anki-sync-server-persistence/ # export DOCKER_IMAGE=kuklinistvan/anki-sync-server:latest Select your own image Do not copy DOCKER_IMAGE from here, as this is just an example. Grab the identifier of the image you wish to use from Supported Projects . docker run -it \\ --mount type=bind,source=\"$PERSISTENCE_DIR\",target=/app/data \\ -p 27701:27701 \\ --name anki-container \\ --rm \\ $DOCKER_IMAGE Argument Explanation --mount type=bind,source=\"$PERSISTENCE_DIR\",target=/app/data Mounts the persistence into the container, such that the instance can write data into it. -p 27701:27701 Opens a port on all of the network interfaces of host machine. First number: port number on the host machine (feel free to change it), second: the port of the server that runs in the container (fixed, you don't need to worry about it). --rm Remove the container after the execution is done. Note that it does not remove the $PERSISTENCE_DIR . $DOCKER_IMAGE The unique identifier of the image. Get it from Supported Projects . --name An arbitrary name to reference the container instance later. -it Run in foreground (see the Docker reference for the exact meaning) On Linux, you can interrupt this instance anytime by hitting Ctrl+C. You can restart the server with the same command. Permanent server setup If you are satisfied with the result you can make the service start at boot by modifying some of the flags. Old flags New flags Comment -it -itd Run in background ( Docker reference ) --rm Do not remove the container if it has crashed. This gives you a chance to inspect it after it has stopped if something has gone wrong. --restart always Restart the image automatically if it has stopped. ( Docker reference ) The new version in the above example would look as follows: docker run -itd \\ --mount type=bind,source=\"$PERSISTENCE_DIR\",target=/app/data \\ -p \"$HOST_PORT\":27701 \\ --name anki-container \\ --restart always \\ $DOCKER_IMAGE As long as the Docker service starts at boot, you can set and forget the server that way. Permanent server setup using Docker-compose Sometimes it is easier save the configuration and make it more readable with docker-compose . In this setup, you would create an empty directory with a docker-compose.yml similar to the one below. Please modify <SUBSTITUTE_$DOCKER_IMAGE_HERE> accordingly. version: \"3\" services: anki-container: image: kuklinistvan/anki-sync-server:latest container_name: anki-container restart: always ports: - \"27701:27701\" volumes: - data:/app/data volumes: data: When you're done, open up a terminal in that directory and control the instance with the commands below: Command Explanation docker compose up Run the configuration in the foreground (interrupt with Ctrl+C on Linux) docker compose up -d Run the configuration in the background. Set and forget. It is going to start at system boot from now on. docker compose stop Stop the server. docker compose down -v Destroy the instance along with the persistent data directory ! This removes your collections! You may run this if you wish to start over or purge the server completely. Please refer to the Docker guides for a more accurate reference of the commands and the arguments. Accessing the container - administering the server The server has a command line administration interface, that you can access from a shell in your container. Provided that you did not alter the name attribute, your container should be named anki-container . Note You can check the name of the container with docker ps . You can access a shell in it while the container is running. docker exec -it anki-container sh In the case of anki-sync-server , you can access the admin CLI: /app/anki-sync-server # ./ankisyncctl.py --help usage: ./ankisyncctl.py <command> [<args>] Commands: adduser <username> - add a new user deluser <username> - delete a user lsuser - list users passwd <username> - change password of a user Encryption Be warned that if you don't use any additional proxies, your connection will be unencrypted! That means if you use Anki to memorize your passwords they will be leaked :) Please don't do that though, as Anki is not designed in mind for safely handling risky data, such as passwords, in the first place. Please refer to one of the solutions at the Encryption section. Troobleshooting Pull requests are welcome! If you encounter an error which is not listed here but you think it would be worth mentioning the solution, we are happy to accept your pull request to the repository of this portal . exec format error Please refer to this guide .","title":"How to use our Docker images"},{"location":"Tutorials/Docker/Howto/#how-to-use-our-docker-images","text":"Servers backed by Docker images have the advantage that: If they work on our machine, they will probably work on your machine Docker makes us easier to ship working versions of the server Docker makes you easier to configure the servers through the unified interface it provides As of yet, the easiest and most reliable way to install anki-sync-server is probably to use one of our Docker images. You can grab an image from Supported Projects .","title":"How to use our Docker images"},{"location":"Tutorials/Docker/Howto/#installation-of-docker","text":"Please refer to the tutorial on the installation Docker's manual to get started. It is quite easy to get started on Linux On a GNU/Linux distribution you can usually find Docker in the default package manager. Install the appropriate package and activate the service. From now on we're assuming that you have installed Docker successfully to your machine.","title":"Installation of Docker"},{"location":"Tutorials/Docker/Howto/#an-example-of-installation-anki-sync-server","text":"This is a general quick tutorial for Docker The images we provide usually have special instructions. Please refer to the README of the appropriate repository. We are going to set up an instance of anki-sync-server here, but you can apply the instructions to any image.","title":"An example of installation anki-sync-server"},{"location":"Tutorials/Docker/Howto/#one-time-setup","text":"If you only want to see the server in action the quickest way possible in an ad-hoc manner, you can start an instance it right now. Create a directory to persist the server data (such as your collections) Start a temporary container # substitute $PERSISTENCE_DIR and $DOCKER_IMAGE accordingly, for example: # export PERSISTENCE_DIR=/home/kuklinistvan/anki-sync-server-persistence/ # export DOCKER_IMAGE=kuklinistvan/anki-sync-server:latest Select your own image Do not copy DOCKER_IMAGE from here, as this is just an example. Grab the identifier of the image you wish to use from Supported Projects . docker run -it \\ --mount type=bind,source=\"$PERSISTENCE_DIR\",target=/app/data \\ -p 27701:27701 \\ --name anki-container \\ --rm \\ $DOCKER_IMAGE Argument Explanation --mount type=bind,source=\"$PERSISTENCE_DIR\",target=/app/data Mounts the persistence into the container, such that the instance can write data into it. -p 27701:27701 Opens a port on all of the network interfaces of host machine. First number: port number on the host machine (feel free to change it), second: the port of the server that runs in the container (fixed, you don't need to worry about it). --rm Remove the container after the execution is done. Note that it does not remove the $PERSISTENCE_DIR . $DOCKER_IMAGE The unique identifier of the image. Get it from Supported Projects . --name An arbitrary name to reference the container instance later. -it Run in foreground (see the Docker reference for the exact meaning) On Linux, you can interrupt this instance anytime by hitting Ctrl+C. You can restart the server with the same command.","title":"One-time setup"},{"location":"Tutorials/Docker/Howto/#permanent-server-setup","text":"If you are satisfied with the result you can make the service start at boot by modifying some of the flags. Old flags New flags Comment -it -itd Run in background ( Docker reference ) --rm Do not remove the container if it has crashed. This gives you a chance to inspect it after it has stopped if something has gone wrong. --restart always Restart the image automatically if it has stopped. ( Docker reference ) The new version in the above example would look as follows: docker run -itd \\ --mount type=bind,source=\"$PERSISTENCE_DIR\",target=/app/data \\ -p \"$HOST_PORT\":27701 \\ --name anki-container \\ --restart always \\ $DOCKER_IMAGE As long as the Docker service starts at boot, you can set and forget the server that way.","title":"Permanent server setup"},{"location":"Tutorials/Docker/Howto/#permanent-server-setup-using-docker-compose","text":"Sometimes it is easier save the configuration and make it more readable with docker-compose . In this setup, you would create an empty directory with a docker-compose.yml similar to the one below. Please modify <SUBSTITUTE_$DOCKER_IMAGE_HERE> accordingly. version: \"3\" services: anki-container: image: kuklinistvan/anki-sync-server:latest container_name: anki-container restart: always ports: - \"27701:27701\" volumes: - data:/app/data volumes: data: When you're done, open up a terminal in that directory and control the instance with the commands below: Command Explanation docker compose up Run the configuration in the foreground (interrupt with Ctrl+C on Linux) docker compose up -d Run the configuration in the background. Set and forget. It is going to start at system boot from now on. docker compose stop Stop the server. docker compose down -v Destroy the instance along with the persistent data directory ! This removes your collections! You may run this if you wish to start over or purge the server completely. Please refer to the Docker guides for a more accurate reference of the commands and the arguments.","title":"Permanent server setup using Docker-compose"},{"location":"Tutorials/Docker/Howto/#accessing-the-container-administering-the-server","text":"The server has a command line administration interface, that you can access from a shell in your container. Provided that you did not alter the name attribute, your container should be named anki-container . Note You can check the name of the container with docker ps . You can access a shell in it while the container is running. docker exec -it anki-container sh In the case of anki-sync-server , you can access the admin CLI: /app/anki-sync-server # ./ankisyncctl.py --help usage: ./ankisyncctl.py <command> [<args>] Commands: adduser <username> - add a new user deluser <username> - delete a user lsuser - list users passwd <username> - change password of a user","title":"Accessing the container - administering the server"},{"location":"Tutorials/Docker/Howto/#encryption","text":"Be warned that if you don't use any additional proxies, your connection will be unencrypted! That means if you use Anki to memorize your passwords they will be leaked :) Please don't do that though, as Anki is not designed in mind for safely handling risky data, such as passwords, in the first place. Please refer to one of the solutions at the Encryption section.","title":"Encryption"},{"location":"Tutorials/Docker/Howto/#troobleshooting","text":"Pull requests are welcome! If you encounter an error which is not listed here but you think it would be worth mentioning the solution, we are happy to accept your pull request to the repository of this portal .","title":"Troobleshooting"},{"location":"Tutorials/Docker/Howto/#exec-format-error","text":"Please refer to this guide .","title":"exec format error"},{"location":"Tutorials/Docker/Howto_Recompiling/","text":"Compiling Docker images for foreign architectures Sometimes you would like to run anki-sync-server on a Raspberry Pi with ARM CPU, or on an older computer with i686 CPU on the board. When starting the Docker container instance, you may encounter a message indicating an \"exec format error\". This is likely due to the fact that you are trying to run a Docker image on an architecture it is not compatible with. Check the architecture of your CPU and check that you are using the appropriate Docker image. lscpu On GNU/Linux distributions, you can usually check your CPU architecture with lscpu . If this image does not exist, you can usually easily create it, following the build instructions in the appropriate repository. Building a Docker image Most of the time you can build the Docker image by entering the directory that contains the Dockerfile and execute the command: docker build -t container_name:tag . For example: docker build -t my-arm-build-of_anki-sync-server . Always check the repository for special instructions first Sometimes there is already a script supplied that prepares the repository first. If the README mentions one, use that, and modify it before running, accordingly. For example, docker-anki-sync-server uses a separate build.sh , as it is mentioned in the README . After creating the image, the result is going to be stored in the local Docker cache under the name and tag you specified, ready for use. Publishing the image If you wish to share your compiled image with others, the easiest way is to upload to DockerHub. After creating an account, you can attach your Docker installation to it with docker login . Tag your existing image in the way you are going to upload it to DockerHub. Tagging means creating another alias for the same image in your local cache. Listing your images You can list the images and their tags in your local cache using docker image ls . For example, if your username on DockerHub is yourdockerid , and you wish to upload the image under your account, you need to tag it first, then push it: docker tag my-arm-build-of_anki-sync-server yourdockerid/yourreponame:arm64 docker tag my-arm-build-of_anki-sync-server yourdockerid/yourreponame:latest docker push yourdockerid/yourreponame:arm64 docker push yourdockerid/yourreponame:latest Share your image with us We are happy to include your build of the image under the unofficial builds, here in this portal.","title":"Compiling Docker images for foreign architectures"},{"location":"Tutorials/Docker/Howto_Recompiling/#compiling-docker-images-for-foreign-architectures","text":"Sometimes you would like to run anki-sync-server on a Raspberry Pi with ARM CPU, or on an older computer with i686 CPU on the board. When starting the Docker container instance, you may encounter a message indicating an \"exec format error\". This is likely due to the fact that you are trying to run a Docker image on an architecture it is not compatible with. Check the architecture of your CPU and check that you are using the appropriate Docker image. lscpu On GNU/Linux distributions, you can usually check your CPU architecture with lscpu . If this image does not exist, you can usually easily create it, following the build instructions in the appropriate repository.","title":"Compiling Docker images for foreign architectures"},{"location":"Tutorials/Docker/Howto_Recompiling/#building-a-docker-image","text":"Most of the time you can build the Docker image by entering the directory that contains the Dockerfile and execute the command: docker build -t container_name:tag . For example: docker build -t my-arm-build-of_anki-sync-server . Always check the repository for special instructions first Sometimes there is already a script supplied that prepares the repository first. If the README mentions one, use that, and modify it before running, accordingly. For example, docker-anki-sync-server uses a separate build.sh , as it is mentioned in the README . After creating the image, the result is going to be stored in the local Docker cache under the name and tag you specified, ready for use.","title":"Building a Docker image"},{"location":"Tutorials/Docker/Howto_Recompiling/#publishing-the-image","text":"If you wish to share your compiled image with others, the easiest way is to upload to DockerHub. After creating an account, you can attach your Docker installation to it with docker login . Tag your existing image in the way you are going to upload it to DockerHub. Tagging means creating another alias for the same image in your local cache. Listing your images You can list the images and their tags in your local cache using docker image ls . For example, if your username on DockerHub is yourdockerid , and you wish to upload the image under your account, you need to tag it first, then push it: docker tag my-arm-build-of_anki-sync-server yourdockerid/yourreponame:arm64 docker tag my-arm-build-of_anki-sync-server yourdockerid/yourreponame:latest docker push yourdockerid/yourreponame:arm64 docker push yourdockerid/yourreponame:latest Share your image with us We are happy to include your build of the image under the unofficial builds, here in this portal.","title":"Publishing the image"},{"location":"Tutorials/Encryption%20with%20proxy/Apache/","text":"HTTPS Encryption with Apache Proxy Before you proceed, consider the warning! AnkiDroid may not verify encryption certificates I ( @kuklinistvan ) did not verify personally, but I've read somewhere in an issue that AnkiDroid accepts any SSL certificate it gets while initiating the encrypted connection. This is a problem, because it can be very easily hijacked which can render the encryption completely useless. Keep in mind that at the moment this is kind of a gossip. Please, if you, as the reader can confirm or refute this - for example, with an experiment -, contact us at Gitter . It can be easily the case that it is no longer true (if it has ever been), but some paranoia is very useful when it comes to encryption. I just did not want to mislead you :) Install Apache2 on your operating system On Linux, look up the manuals and install the appropriate packages from the system package manager. Install these software components: Apache2 mod_proxy mod_ssl Enable the mods with: a2enmod proxy a2enmod proxy_http a2enmod ssl Restart Apache2 service. Get a certificate Unfortunately, managing SSL certificates and PKI in general is not a quick topic. At the end of the day, you need to get a certificate for your server that is trusted both by your Android device and your computer. You can either: Get your server online and get a free certificate from Let's Encrypt Create an in-house Certificate Authority, install its certificate to your Android device and to your computer and issue a certificate for the server with that Do not underestimate the importance of the measurements! We highly advise you to learn about this topic in depth at Web Service Security Tutorial - otherwise, there is a high chance of creating false encryption, which does not actually protect you. Create or extend a <VirtualHost> Here is a VirtualHost with SSL and proxying enabled. <VirtualHost *:443> ServerName anki.my.fancy.server.net <Location /sync> ProxyPass http://127.0.0.1:27701/sync ProxyPassReverse http://127.0.0.1:27701/sync </Location> <Location /msync> ProxyPass http://127.0.0.1:27701/msync ProxyPassReverse http://127.0.0.1:27701/msync </Location> UseCanonicalName off SSLEngine on SSLProtocol +TLSv1.2 SSLCertificateFile /path/to/the/cert/cert.pem SSLCertificateKeyFile /path/to/the/key/key.pem ProxyRequests off ProxyPreserveHost on </VirtualHost> Apache2 References mod_proxy mod_ssl","title":"HTTPS Encryption with Apache Proxy"},{"location":"Tutorials/Encryption%20with%20proxy/Apache/#https-encryption-with-apache-proxy","text":"Before you proceed, consider the warning! AnkiDroid may not verify encryption certificates I ( @kuklinistvan ) did not verify personally, but I've read somewhere in an issue that AnkiDroid accepts any SSL certificate it gets while initiating the encrypted connection. This is a problem, because it can be very easily hijacked which can render the encryption completely useless. Keep in mind that at the moment this is kind of a gossip. Please, if you, as the reader can confirm or refute this - for example, with an experiment -, contact us at Gitter . It can be easily the case that it is no longer true (if it has ever been), but some paranoia is very useful when it comes to encryption. I just did not want to mislead you :)","title":"HTTPS Encryption with Apache Proxy"},{"location":"Tutorials/Encryption%20with%20proxy/Apache/#install-apache2-on-your-operating-system","text":"On Linux, look up the manuals and install the appropriate packages from the system package manager. Install these software components: Apache2 mod_proxy mod_ssl Enable the mods with: a2enmod proxy a2enmod proxy_http a2enmod ssl Restart Apache2 service.","title":"Install Apache2 on your operating system"},{"location":"Tutorials/Encryption%20with%20proxy/Apache/#get-a-certificate","text":"Unfortunately, managing SSL certificates and PKI in general is not a quick topic. At the end of the day, you need to get a certificate for your server that is trusted both by your Android device and your computer. You can either: Get your server online and get a free certificate from Let's Encrypt Create an in-house Certificate Authority, install its certificate to your Android device and to your computer and issue a certificate for the server with that Do not underestimate the importance of the measurements! We highly advise you to learn about this topic in depth at Web Service Security Tutorial - otherwise, there is a high chance of creating false encryption, which does not actually protect you.","title":"Get a certificate"},{"location":"Tutorials/Encryption%20with%20proxy/Apache/#create-or-extend-a-virtualhost","text":"Here is a VirtualHost with SSL and proxying enabled. <VirtualHost *:443> ServerName anki.my.fancy.server.net <Location /sync> ProxyPass http://127.0.0.1:27701/sync ProxyPassReverse http://127.0.0.1:27701/sync </Location> <Location /msync> ProxyPass http://127.0.0.1:27701/msync ProxyPassReverse http://127.0.0.1:27701/msync </Location> UseCanonicalName off SSLEngine on SSLProtocol +TLSv1.2 SSLCertificateFile /path/to/the/cert/cert.pem SSLCertificateKeyFile /path/to/the/key/key.pem ProxyRequests off ProxyPreserveHost on </VirtualHost>","title":"Create or extend a &lt;VirtualHost&gt;"},{"location":"Tutorials/Encryption%20with%20proxy/Apache/#apache2-references","text":"mod_proxy mod_ssl","title":"Apache2 References"}]}